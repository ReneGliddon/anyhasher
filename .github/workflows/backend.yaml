name: Backend
run-name: "🛠️ ${{ github.event.head_commit.message }} (${{ github.sha }})"
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'
    branches:
      - main
      - l4
  pull_request:
    paths:
      - 'backend/**'
      - 'github/workflows/backend.yaml'
    branches:
      - main
jobs:
  build:
    name: 🛠️ Build Backend Artifact
    needs:
      - audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: fe-node-${{ hashFiles('backend/package-lock.json') }}

      - name: Install deps
        run: cd backend && npm i

      - name: Compile code
        run: cd backend && npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: backend/build

  audit:
    name: 🛡️ Audit Backend Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check for vulnerabilities
        run: cd backend && npm audit --production --audit-level=moderate

  lint:
    name: 🧼 Ensure Code Style
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: fe-node-${{ hashFiles('backend/package-lock.json') }}

      - name: Install deps
        run: cd backend && npm i

      - name: 😂 Lint code
        run: cd backend && npm run lint
  
  test:
    name: 🧪 Run Unit Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: fe-node-${{ hashFiles('backend/package-lock.json') }}

      - name: Install deps
        run: cd backend && npm i

      - name: Run the unit tests
        run: cd backend && npm run test-ci
  
  static-analysis:
    name: 🔬 Run Static Code Analysis
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          config-file: ./.github/codeql/codeql.config.yml

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache Node Modules
        id: cache
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: fe-node-${{ hashFiles('backend/package-lock.json') }}

      - name: Install Deps
        run: cd backend && npm i

      - name: Build
        run: cd backend && npm run build

      # - name: Perform Analysis
      #   uses: github/codeql-action/analyze@v2

  deploy:
    name: 🚚 Deploy Backend Artifact
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - static-analysis
    if: github.ref == 'refs/heads/main'
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  verify:
    name: 🧪 Verify Successful Deployment
    needs:
      - deploy
    runs-on: ubuntu-latest
    if: success()
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Backend Smoke Test
        run: |
          export TEST_URL=${{needs.deploy.outputs.page_url}}
          cd backend/e2e
          npm i
          npm run smoke

